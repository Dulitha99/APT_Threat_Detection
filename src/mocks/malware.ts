// src/mocks/malware.ts

export interface MockMalware {
  id: string;
  hash: string; // MD5 or SHA256 hash of the malware
  name: string; // Common name or family (e.g., Emotet, WannaCry)
  type: 'Virus' | 'Trojan' | 'Spyware' | 'Ransomware' | 'Adware' | 'Worm' | 'Rootkit';
  riskLevel: 'Low' | 'Medium' | 'High' | 'Critical';
  status: 'Detected' | 'Quarantined' | 'Cleaned' | 'Active' | 'MitigationFailed';
  firstSeen: string; // ISO date string
  lastSeen?: string; // ISO date string, optional
  affectedSystems?: number; // Number of systems affected
  filePath?: string; // Example path where it was found
  description?: string;
}

export const mockMalwareData: MockMalware[] = [
  { 
    id: 'mw-001', 
    hash: 'e4d909c290d0fb1ca068ffaddf22cbd0',
    name: 'Emotet',
    type: 'Trojan', 
    riskLevel: 'High', 
    status: 'Quarantined', 
    firstSeen: '2023-03-15T10:30:00Z',
    lastSeen: new Date().toISOString(),
    affectedSystems: 5,
    filePath: 'C:/Users/Downloads/invoice_details.exe',
    description: 'Detected via email attachment, known banking trojan.'
  },
  { 
    id: 'mw-002', 
    hash: 'a1b2c3d4e5f607080910111213141516',
    name: 'Generic Adware',
    type: 'Adware', 
    riskLevel: 'Low', 
    status: 'Detected', 
    firstSeen: '2023-09-01T11:00:00Z',
    affectedSystems: 20,
    description: 'Detected in browser extensions, causing pop-up advertisements.'
  },
  { 
    id: 'mw-003', 
    hash: 'f0e1d2c3b4a5968778695a4b3c2d1e0f',
    name: 'Ryuk',
    type: 'Ransomware', 
    riskLevel: 'Critical', 
    status: 'Active', 
    firstSeen: '2023-05-20T08:00:00Z',
    lastSeen: new Date(Date.now() - 1000 * 60 * 60 * 24 * 2).toISOString(), // 2 days ago
    affectedSystems: 2,
    description: 'Attempted encryption of critical server files. Immediate response required.'
  },
];

// Optional: Function to simulate fetching malware data
export const getMockMalware = (): Promise<MockMalware[]> => 
  new Promise(resolve => setTimeout(() => resolve(mockMalwareData), 600));
